{"version":3,"sources":["webpack:///./src/pages/thinkAbout.js"],"names":["ConsoleLog","_ref","children","console","log","ThinkPageContainer","styled","div","withConfig","displayName","componentId","StyledPostDiv","StyledDescriptionPostDiv","StyledHeaderThink","p","StyledHeaderPost","props","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledPublishedDate","AboutImg","img","StyledDescription","ReadPostButton","button","StyledTagsContainer","StyledTags","thinkAbout","_objectDestructuringEmpty","data","allContentfulBlogPost","edges","posts","blogTags","distinct","map","tag","index","key","_ref2","post","node","id","to","slug","style","textDecoration","src","heroImage","fluid","alt","description","title","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","moment","publishDate","format","pageQuery"],"mappings":"8OAKA,IAAMA,EAAa,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAEpB,OADAC,QAAQC,IAAIF,IACL,GAGHG,EAAqBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,sEAMlBK,EAAgBL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,sHAQbM,EAA2BN,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,qBAIxBO,EAAoBP,IAAOQ,EAAVN,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,8GAcjBS,GALmBT,YAAO,SAAAU,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAA,EAASJ,KAA7BR,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,2CAKGA,IAAOQ,EAAVN,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,kEAOhBe,EAAsBf,IAAOQ,EAAVN,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,2CAKnBgB,EAAWhB,IAAOiB,IAAVf,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,8DAMRkB,EAAoBlB,IAAOQ,EAAVN,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,+EAOVmB,EAAiBnB,IAAOoB,OAAVlB,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,2IAWrBqB,EAAsBrB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,iBAAGJ,CAAH,wBAInBsB,EAAatB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,iBAAGJ,CAAH,kCAmDDuB,UA9CI,SAAAb,+EAASc,CACfd,EAAMe,KAAKC,sBAAsBC,OAC5C,IAAMC,EAAQlB,EAAMe,KAAKC,sBAAsBC,MACzCE,EAAWnB,EAAMe,KAAKC,sBAAsBI,SAElD,OACEnB,EAAAC,EAAAC,cAACd,EAAD,KACEY,EAAAC,EAAAC,cAACN,EAAD,mCACAI,EAAAC,EAAAC,cAACQ,EAAD,eAEGQ,EAASE,IAAI,SAACC,EAAKC,GAAN,OACZtB,EAAAC,EAAAC,cAACS,EAAD,CAAYY,IAAKD,GAAjB,IAA0BD,EAA1B,UAGHJ,EAAMG,IAAI,SAAAI,GAAA,IAASC,EAATD,EAAGE,KAAH,OACT1B,EAAAC,EAAAC,cAACR,EAAD,CAAe6B,IAAKE,EAAKE,IACvB3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyB,GAAE,IAAMH,EAAKI,KAAQC,MAAO,CAAEC,eAAgB,SAClD/B,EAAAC,EAAAC,cAACG,EAAD,CACE2B,IAAKP,EAAKQ,UAAUC,MAAMF,IAC1BG,IAAKV,EAAKQ,UAAUG,cAEtBpC,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAACJ,EAAD,KAAmB2B,EAAKY,OACxBrC,EAAAC,EAAAC,cAACK,EAAD,CACE+B,wBAAyB,CACvBC,OAAQd,EAAKW,YAAYI,oBAAoBC,QAGjDzC,EAAAC,EAAAC,cAACE,EAAD,mBACcsC,IAAOjB,EAAKkB,aAAaC,OAAO,iBAE9C5C,EAAAC,EAAAC,cAACM,EAAD,uBAMRR,EAAAC,EAAAC,cAACnB,EAAD,KACGmC,EAASE,IAAI,SAACC,EAAKC,GAAN,OACZtB,EAAAC,EAAAC,cAAA,OAAKqB,IAAKD,GAAQD,QASrB,IAAMwB,EAAS","file":"component---src-pages-think-about-js-9013704bfbe546be1776.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\n\nconst ConsoleLog = ({ children }) => {\n  console.log(children)\n  return false\n}\n\nconst ThinkPageContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  margin: 0 0.67em 0 0.67em;\n`\n\nconst StyledPostDiv = styled.div`\n  margin: 0.67em 0 0.67em 0;\n  padding: 0em 0 0.67em 0;\n  box-shadow: 0 1px 7px rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  border: 0;\n`\n\nconst StyledDescriptionPostDiv = styled.div`\n  padding: 1.25em;\n`\n\nconst StyledHeaderThink = styled.p`\n  margin: 2.5em 0 0em 0;\n  font-weight: 500;\n  color: #684a83;\n  font-size: 2em;\n  text-align: center;\n  text-decoration: none;\n`\n\nconst StyledHeaderLink = styled(props => <Link {...props} />)`\n  font-size: 1.5em;\n  text-decoration: none;\n`\n\nconst StyledHeaderPost = styled.p`\n  margin: 0 0 0 0;\n  font-size: 1.5em;\n  font-weight: 700;\n  color: black;\n`\n\nconst StyledPublishedDate = styled.p`\n  font-size: 0.67em;\n  margin: 0.67em 0 0 0;\n`\n\nconst AboutImg = styled.img`\n  border-radius: 4px 4px 0 0;\n  align-items: center;\n  width: 100%;\n`\n\nconst StyledDescription = styled.p`\n  margin: 1em 0 0 0;\n  align-items: center;\n  font-size: 1em;\n  color: rgba(0, 0, 0, 0.44);\n`\n\nexport const ReadPostButton = styled.button`\n  cursor: default;\n  background-color: #684a83;\n  margin: 0.67em 0 0 0;\n  color: white;\n  width: 33%;\n  font-size: 0.9rem;\n  padding: 0.6rem;\n  border-radius: 24px;\n`\n\nconst StyledTagsContainer = styled.div`\n  text-align: center;\n`\n\nconst StyledTags = styled.div`\n  display: inline;\n  float: center;\n`\n\nconst thinkAbout = props => {\n  const {} = props.data.allContentfulBlogPost.edges\n  const posts = props.data.allContentfulBlogPost.edges\n  const blogTags = props.data.allContentfulBlogPost.distinct\n\n  return (\n    <ThinkPageContainer>\n      <StyledHeaderThink>This is what I think about</StyledHeaderThink>\n      <StyledTagsContainer>\n        Topics:\n        {blogTags.map((tag, index) => (\n          <StyledTags key={index}> {tag} | </StyledTags>\n        ))}\n      </StyledTagsContainer>\n      {posts.map(({ node: post }) => (\n        <StyledPostDiv key={post.id}>\n          <Link to={`/${post.slug}`} style={{ textDecoration: \"none\" }}>\n            <AboutImg\n              src={post.heroImage.fluid.src}\n              alt={post.heroImage.description}\n            />\n            <StyledDescriptionPostDiv>\n              <StyledHeaderPost>{post.title}</StyledHeaderPost>\n              <StyledDescription\n                dangerouslySetInnerHTML={{\n                  __html: post.description.childMarkdownRemark.html,\n                }}\n              />\n              <StyledPublishedDate>\n                Published: {moment(post.publishDate).format(\"MMM DD, YYYY\")}\n              </StyledPublishedDate>\n              <ReadPostButton>Read More</ReadPostButton>\n            </StyledDescriptionPostDiv>\n          </Link>\n        </StyledPostDiv>\n      ))}\n\n      <ConsoleLog>\n        {blogTags.map((tag, index) => (\n          <div key={index}>{tag}</div>\n        ))}\n      </ConsoleLog>\n    </ThinkPageContainer>\n  )\n}\n\nexport default thinkAbout\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      distinct(field: tags)\n      edges {\n        node {\n          title\n          id\n          slug\n          tags\n          publishDate\n          heroImage {\n            fluid {\n              src\n            }\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}